<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.deker.cmm.mapper.CMMMapper">

    <select id="selectCode" parameterType="CMMConditions" resultType="CMM">
        SELECT      CODE        value
                ,   CODE_NM     label
        FROM CODE_DETAIL
        WHERE CODE_ID = #{codeId}
    </select>

    <update id="updateIds" parameterType="String">
        INSERT INTO IDS
        (TABEL_NAME, NEXT_ID)
        VALUES (#{tableName},0)
        ON DUPLICATE KEY UPDATE
        TABEL_NAME = #{tableName},
        NEXT_ID = NEXT_ID+1
    </update>

    <select id="selectIds" parameterType="String" resultType="Integer">
        SELECT NEXT_ID  nextId
        FROM IDS
        WHERE TABEL_NAME = #{tableName}
    </select>

    <insert id="insertImg" parameterType="ImgConditions">
        INSERT INTO IMAGE
        (
                IMG_ID
            ,   IMG_PATH
            ,   STRE_NM
            ,   IMG_NM
            ,   IMG_EXTENTION
            ,   FILE_SIZE
            ,   CREATE_ID
            ,   UPDATE_ID
        )
        VALUES
        (
                #{imgId}
            ,   #{imgPath}
            ,   #{streNm}
            ,   #{imgNm}
            ,   #{imgExtention}
            ,   #{fileSize}
            ,   #{memId}
            ,   #{memId}
        )
    </insert>

    <select id="selectImg" parameterType="String" resultType="Img">
        SELECT      IMG_PATH            imgPath
                ,   STRE_NM             streNm
                ,   IMG_NM              imgNm
                ,   IMG_EXTENTION       imgExtention
                ,   FILE_SIZE           fileSize
        FROM IMAGE
        WHERE IMG_ID = #{imgId}
    </select>




    <select id="getMenu" resultType="Menu">
        select m.MENU_NM AS menuName,
               m.MENU_URL AS menuUrl,
               m.MENU_ID AS menuId,
               m.MENU_PARENT AS menuParent,
               m.MENU_IMG_URL AS menuImgUrl
        from study_gh.MENU m, study_gh.MENU_AUTHORITY a
        where a.AUTHORITY_CODE = #{authorityCode} and a.MENU_ID = m.MENU_ID
    </select>


    <select id="getUserRole" resultType="String">
        select AUTHORITY_CODE
        from study_gh.AUTHORITY a
        where a.MEM_ID = #{memId}
    </select>



    <insert id="follow" parameterType="Follow">
        insert into study_gh.FOLLOW
        (
         follower, following
        )
        VALUES (
                   #{memId}, #{userId}
               )
    </insert>


    <delete id="unFollow" parameterType="Follow">
        delete from study_gh.FOLLOW
        where FOLLOWER = #{memId} and FOLLOWING = #{userId}
    </delete>

    <select id="getFollowingCount" resultType="int">
        select count(FOLLOWING)
        from study_gh.FOLLOW f
        where f.FOLLOWER = #{memId}

    </select>

    <select id="getFollowing" resultType="Follow">
        select m.NICKNAME AS nickNm,
               m.PROFILE_IMG AS profile_img
        from study_gh.FOLLOW f, study_gh.MEMBER m
        where f.FOLLOWER = #{memId} and f.FOLLOWING = m.MEM_ID
        <if test="keyword != null">
          and m.NICKNAME like CONCAT('%', #{keyword}, '%')
        </if>
        limit #{startRowNo}, #{endRowNo}
    </select>



    <select id="getFollowerCount" resultType="int">
        select count(FOLLOWER)
        from study_gh.FOLLOW f
        where f.FOLLOWING = #{userId}

    </select>

    <select id="getFollower" resultType="Follow">
        select m.NICKNAME AS nickNm,
        m.PROFILE_IMG AS profile_img
        from study_gh.FOLLOW f, study_gh.MEMBER m
        where f.FOLLOWING = #{userId} and f.FOLLOWER = m.MEM_ID
        <if test="keyword != null">
            and m.NICKNAME like CONCAT('%', #{keyword}, '%')
        </if>
        limit #{startRowNo}, #{endRowNo}
    </select>

    <delete id="deleteFollowMe" parameterType="Follow">
        DELETE FROM study_gh.FOLLOW
        WHERE   FOLLOWER = #{userId}
        AND     FOLLOWING = #{memId}
    </delete>

    <select id="selectAlarm" parameterType="String" resultType="Alarm">
        SELECT      A.ALARM_ID                                                          alarmId
                ,   A.SNET_INFO                                                         sentInfo
                ,   A.ALARM_CODE                                                        alarmCode
                ,   A.CREATE_DT                                                         createDt
                ,   AI.URL                                                              url
                ,   CONCAT(ALARM_FROM_NAME(A.SNET_INFO,A.ALARM_CODE),AI.MESSAGE)        message
                ,   ALARM_FROM_NAME(A.SNET_INFO,A.ALARM_CODE)                           alarmFromNm
                ,   IMG_STRE_NM(ALARM_FROM_IMG(A.SNET_INFO,A.ALARM_CODE))               alarmFromImg
                ,   ALARM_DELAY(TIMESTAMPDIFF(second , A.CREATE_DT , NOW()))            alarmDelay
        FROM ALARM  A
        LEFT OUTER JOIN ALARM_INFO AI ON A.ALARM_CODE = AI.ALARM_CODE
        WHERE   1=1
        AND     MEM_ID = #{memId}
        AND     NOE_READ = 'N'
        AND     USE_YN = 'Y'
    </select>

    <update id="updateAlarmRead" parameterType="String">
        UPDATE ALARM
        SET NOE_READ = 'Y'
        WHERE ALARM_ID = #{alarmId}
    </update>

</mapper>

