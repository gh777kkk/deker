<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.deker.post.mapper.PostMapper">

    <select id="selectMyPostList" parameterType="PostConditions" resultType="Post">
        SELECT      PL.POST_ID          postId
                ,   PD.POST_IMG         postImg
        FROM POST_LIST PL
        LEFT OUTER JOIN POST_DETAIL PD  ON  PL.POST_ID = PD.POST_ID
                                        AND PD.USE_YN = 'Y'
        WHERE 1=1
        AND PL.MEM_ID = #{memId}
        AND PL.USE_YN = 'Y'
		LIMIT				#{startRowNo}, #{endRowNo}
    </select>

    <select id="selectMyPostListCount" parameterType="PostConditions" resultType="Integer">
        SELECT      COUNT(*)
        FROM POST_LIST PL
        LEFT OUTER JOIN POST_DETAIL PD  ON  PL.POST_ID = PD.POST_ID
                                        AND PD.USE_YN = 'Y'
        WHERE 1=1
        AND PL.MEM_ID = #{memId}
        AND PL.USE_YN = 'Y'
    </select>

    <select id="selectMemberProfileImg" parameterType="PostConditions" resultType="Post">
        SELECT      PROFILE_IMG     profileImg
        FROM MEMBER
        WHERE   MEM_ID = #{memId}
        AND     LAST_DT > '9999-12-30'
    </select>


    <insert id="insertPost" parameterType="MyPost">
        insert into study_gh.POST_LIST
        (
            POST_ID, MEM_ID, JOB_CODE, MOOD_CODE, MTRL_CODE
        )
        VALUES (
                   #{communityId}, #{memId}, #{jobCode}, #{moodCode}, #{materialCode}
               )
    </insert>

    <insert id="insertPostDetail" parameterType="MyPost">
        insert into study_gh.POST_DETAIL
        (
            POST_DETAIL_ID, POST_ID, POST_IMG, CONTENTS, POST_TITLE
        )
        VALUES (
                   #{postDetailId}, #{communityId}, #{postImg}, #{communityContent}, #{communityTitle}
               )
    </insert>

    <insert id="insertPostTag" parameterType="MyPost">
        insert into study_gh.POST_TAG
        (
            post_tag_id, post_detail_id, contents
        )
        VALUES (
                   #{postTagId}, #{postDetailId}, #{tag}
               )
    </insert>

    <insert id="insertPostItem" parameterType="CommunityProducts">
        insert into study_gh.POST_ITEM
        (
            POST_ITEM_ID, POST_DETAIL_ID, PRODUCT_ID,  MAKET_CONTENTS, LOCATIONX, LOCATIONY
        )
        VALUES (
                   #{id}, #{postDetailId}, #{productId}, #{productDescription}, #{offsetX}, #{offsetY}
               )
    </insert>


    <select id="getPostDetail" resultType="PostProperties">
        select d.POST_ID AS communityId,
               d.post_title AS communityTitle,
               l.MEM_ID AS userId,
               m.NICKNAME AS userNick,
               m.PROFILE_IMG AS userProfileImg,
               post_img AS communityImage
        from study_gh.MEMBER m, study_gh.POST_LIST l, study_gh.POST_DETAIL d
        where l.POST_ID = #{communityId} and d.POST_ID = #{communityId}
          and m.MEM_ID = l.MEM_ID and l.USE_YN ='Y'
        group by d.POST_ID
    </select>


    <select id="getPostLike" resultType="PostProperties">
        SELECT L.POST_ID AS communityId,
                COUNT(K.MEM_ID) AS likeCount
        FROM study_gh.POST_LIST L
        LEFT OUTER JOIN study_gh.POST_LIKE K ON K.POST_ID = L.POST_ID
        WHERE date(L.CREATE_DT) >= date(subdate(now(), INTERVAL 30 DAY))
          and l.USE_YN ='Y'
        GROUP BY L.POST_ID, L.CREATE_DT
        ORDER BY likeCount DESC, L.CREATE_DT DESC
        limit 8
    </select>

    <select id="getPostCommentCount" resultType="int">
        select count(POST_ID) as commentCount
        from study_gh.POST_COMMENT c
        where POST_ID = #{communityId}
    </select>

    <select id="getPostFollow" resultType="boolean">
        select if(count(FOLLOWING)=0, false, true) as followingCheck
        from study_gh.FOLLOW
        where FOLLOWER = #{memId} and FOLLOWING = #{userId}
    </select>


    <select id="getPostComment" resultType="PostComment">
        select c.UPDATE_DT AS commentUpdateYmdt ,
               m.NICKNAME AS writeNickname,
               m.PROFILE_IMG AS writerProfileImgUrl,
               c.CONTENTS AS content,
               c.POST_COMMENT_ID AS postCommentId
        from study_gh.MEMBER m, study_gh.POST_COMMENT c
        where  c.POST_ID = #{communityId}
          and m.MEM_ID = c.MEM_ID
        group by c.POST_COMMENT_ID, c.UPDATE_DT
        order by c.UPDATE_DT desc
        LIMIT #{startRowNo}, #{endRowNo}
    </select>


    <insert id="insertPostComment" parameterType="PostComment">
        insert into study_gh.POST_COMMENT
        (
           post_comment_id, post_id, pre_post_comment_id, contents, MEM_ID
        )
        VALUES (
                   #{postCommentId}, #{communityId}, 'pcId_000000000000000', #{content}, #{memId}
               )
    </insert>



    <select id="getSelectPostDetail" resultType="MyPost">
        select l.POST_ID AS communityId,
               POST_IMG As postImg,
               CONTENTS AS communityContent,
               POST_TITLE AS communityTitle,
               l.JOB_CODE AS jobCode,
               l.MOOD_CODE AS moodCode,
               l.MTRL_CODE AS material,
               d.POST_DETAIL_ID AS postDetailId
        from study_gh.POST_DETAIL d, study_gh.POST_LIST l
        where d.POST_ID = #{communityId} AND l.POST_ID =#{communityId}
          and l.USE_YN ='Y'
    </select>


    <select id="getPostTag" resultType="MyPost">
        select t.CONTENTS AS tag
        from study_gh.POST_TAG t
        where t.POST_DETAIL_ID =#{postDetailId}
    </select>

    <select id="getPostProduct" resultType="CommunityProducts">
        select post_item_id AS id,
               product_id AS productId,
               p.PRODUCT_NAME AS productName,
               p.PRODUCT_PRICE AS productPayment,
               p.PRODUCT_IMG AS productImgUrl,
               locationx AS offsetX,
               locationy AS offsetY
        from study_gh.POST_ITEM i, study_gh.MKT_PRODUCT p
        where i.POST_DETAIL_ID = #{postDetailId} and PRODUCT_ID = p.MKT_PRODUCT_ID
    </select>



    <select id="getMorePostCount" resultType="int">
        SELECT count(L.POST_ID)
        FROM study_gh.POST_LIST L
                 LEFT OUTER JOIN study_gh.POST_LIKE K ON K.POST_ID = L.POST_ID
    </select>


    <select id="getMorePostLike" resultType="PostProperties">
        SELECT d.POST_ID AS communityId,
               d.post_title AS communityTitle,
               L.MEM_ID AS userId,
               m.NICKNAME AS userNick,
               m.PROFILE_IMG AS userProfileImg,
               post_img AS communityImage,
               COUNT(K.MEM_ID) AS likeCount
        FROM study_gh.POST_LIST L
                 left join study_gh.MEMBER m on L.MEM_ID = m.MEM_ID
                 Left Join study_gh.POST_DETAIL d on L.POST_ID = d.POST_ID
                 LEFT OUTER JOIN study_gh.POST_LIKE K ON K.POST_ID = L.POST_ID
        where L.USE_YN ='Y'
        GROUP BY L.POST_ID, L.CREATE_DT
        ORDER BY likeCount DESC, L.CREATE_DT DESC
        limit #{startRowNo}, #{endRowNo}
    </select>




    <select id="getPostMyFollow" resultType="PostProperties">
        select d.POST_ID AS communityId,
               d.post_title AS communityTitle,
               l.MEM_ID AS userId,
               m.NICKNAME AS userNick,
               m.PROFILE_IMG AS userProfileImg,
               post_img AS communityImage
        from study_gh.MEMBER m, study_gh.POST_LIST l, study_gh.POST_DETAIL d,
             (select FOLLOWING
              from study_gh.FOLLOW
              where FOLLOWER = #{memId}) as f
        where l.POST_ID = d.POST_ID and l.MEM_ID in (f.FOLLOWING) and m.MEM_ID = l.MEM_ID
          and l.USE_YN ='Y'
        group by l.POST_ID, l.CREATE_DT
        order by  l.CREATE_DT desc limit 4
    </select>


    <select id="getPostMyFollowCount" resultType="int">
        select count(d.POST_ID)
        from study_gh.MEMBER m, study_gh.POST_LIST l, study_gh.POST_DETAIL d,
             (select FOLLOWING
              from study_gh.FOLLOW
              where FOLLOWER = #{memId}) as f
        where l.POST_ID = d.POST_ID and l.MEM_ID in (f.FOLLOWING) and m.MEM_ID = l.MEM_ID
          and l.USE_YN ='Y'
    </select>


    <select id="getMorePostMyFollow" resultType="PostProperties">
        select d.POST_ID AS communityId,
               d.post_title AS communityTitle,
               l.MEM_ID AS userId,
               m.NICKNAME AS userNick,
               m.PROFILE_IMG AS userProfileImg,
               post_img AS communityImage
        from study_gh.MEMBER m, study_gh.POST_LIST l, study_gh.POST_DETAIL d,
             (select FOLLOWING
              from study_gh.FOLLOW
              where FOLLOWER = #{memId}) as f
        where l.POST_ID = d.POST_ID and l.MEM_ID in (f.FOLLOWING) and m.MEM_ID = l.MEM_ID
          and l.USE_YN ='Y'
        group by l.POST_ID, l.CREATE_DT
        order by  l.CREATE_DT desc
        limit #{startRowNo}, #{endRowNo}
    </select>



    <select id="getPostCustom" resultType="PostProperties">
        select d.POST_ID AS communityId,
            d.post_title AS communityTitle,
            l.MEM_ID AS userId,
            m.NICKNAME AS userNick,
            m.PROFILE_IMG AS userProfileImg,
            post_img AS communityImage
        from study_gh.MEMBER m, study_gh.POST_LIST l
            LEFT JOIN study_gh.POST_DETAIL d on  l.POST_ID = d.POST_ID
            LEFT JOIN study_gh.POST_TAG t on d.POST_DETAIL_ID = t.POST_DETAIL_ID
            LEFT JOIN study_gh.MEMBER_TAG mt on mt.MEM_ID = #{memId} and t.CONTENTS = mt.CONTENTS
        where  m.MEM_ID = l.MEM_ID and date(l.CREATE_DT) >= date(subdate(now(), INTERVAL 30 DAY))
          and l.USE_YN ='Y'
        group by  l.POST_ID, l.CREATE_DT
        order by COUNT(mt.CONTENTS)desc , l.CREATE_DT desc limit 4
    </select>


    <select id="getMorePostCustomCount" resultType="int">
        select COUNT(d.POST_ID)
        from study_gh.MEMBER m, study_gh.POST_LIST l
                                    LEFT JOIN study_gh.POST_DETAIL d on  l.POST_ID = d.POST_ID
                                    LEFT JOIN study_gh.POST_TAG t on d.POST_DETAIL_ID = t.POST_DETAIL_ID
                                    LEFT JOIN study_gh.MEMBER_TAG mt on mt.MEM_ID = #{memId} and t.CONTENTS = mt.CONTENTS
        where l.USE_YN ='Y'
    </select>



    <select id="getMorePostCustom" resultType="PostProperties">
        select d.POST_ID AS communityId,
               d.post_title AS communityTitle,
               l.MEM_ID AS userId,
               m.NICKNAME AS userNick,
               m.PROFILE_IMG AS userProfileImg,
               post_img AS communityImage
        from study_gh.MEMBER m, study_gh.POST_LIST l
                                    LEFT JOIN study_gh.POST_DETAIL d on  l.POST_ID = d.POST_ID
                                    LEFT JOIN study_gh.POST_TAG t on d.POST_DETAIL_ID = t.POST_DETAIL_ID
                                    LEFT JOIN study_gh.MEMBER_TAG mt on mt.MEM_ID = #{memId} and t.CONTENTS = mt.CONTENTS
        where l.USE_YN ='Y'
        group by  l.POST_ID, l.CREATE_DT
        order by COUNT(mt.CONTENTS)desc , l.CREATE_DT desc
        limit #{startRowNo}, #{endRowNo}
    </select>





    <select id="getPostNew" parameterType="List" resultType="PostProperties">
        select d.POST_ID AS communityId,
               d.post_title AS communityTitle,
               l.MEM_ID AS userId,
               m.NICKNAME AS userNick,
               m.PROFILE_IMG AS userProfileImg,
               post_img AS communityImage
        from study_gh.MEMBER m, study_gh.POST_LIST l, study_gh.POST_DETAIL d
        where l.POST_ID = d.POST_ID and m.MEM_ID = l.MEM_ID and l.USE_YN ='Y'
        <if test="list!=null and list.size!=0">
            and d.POST_ID NOT IN
            (<foreach collection="list" item="item" separator=",">
                    #{item.communityId}
            </foreach> )
          </if>
        group by l.POST_ID, l.CREATE_DT
        order by  l.CREATE_DT desc limit 8
    </select>

    <select id="selectPostMemId" parameterType="PostConditions" resultType="Post">
        SELECT      MEM_ID      memId
        FROM POST_LIST
        WHERE POST_ID = #{postId}
    </select>

    <update id="deletePostList" parameterType="PostConditions">
        UPDATE  POST_LIST
        SET     USE_YN = 'N'
        WHERE   POST_ID = #{postId}
    </update>

    <update id="deletePostDetail" parameterType="PostConditions">
        UPDATE  POST_DETAIL
        SET     USE_YN = 'N'
        WHERE   POST_ID = #{postId}
    </update>













</mapper>
