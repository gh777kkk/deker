<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.deker.post.mapper.PostMapper">

    <select id="selectMyPostList" parameterType="PostConditions" resultType="Post">
        SELECT      PL.POST_ID          postId
                ,   PD.POST_IMG         postImg
        FROM POST_LIST PL
        LEFT OUTER JOIN POST_DETAIL PD  ON  PL.POST_ID = PD.POST_ID
                                        AND PD.USE_YN = 'Y'
        WHERE 1=1
        AND PL.MEM_ID = #{memId}
        AND PL.USE_YN = 'Y'
		LIMIT				#{startRowNo}, #{endRowNo}
    </select>

    <select id="selectMyPostListCount" parameterType="PostConditions" resultType="Integer">
        SELECT      COUNT(*)
        FROM POST_LIST PL
        LEFT OUTER JOIN POST_DETAIL PD  ON  PL.POST_ID = PD.POST_ID
                                        AND PD.USE_YN = 'Y'
        WHERE 1=1
        AND PL.MEM_ID = #{memId}
        AND PL.USE_YN = 'Y'
    </select>

    <select id="selectMemberProfileImg" parameterType="PostConditions" resultType="Post">
        SELECT      PROFILE_IMG     profileImg
        FROM MEMBER
        WHERE   MEM_ID = #{memId}
        AND     LAST_DT > '9999-12-30'
    </select>


    <insert id="insertPost" parameterType="MyPost">
        insert into study_gh.POST_LIST
        (
            POST_ID, MEM_ID, JOB_CODE, MOOD_CODE, MTRL_CODE
        )
        VALUES (
                   #{communityId}, #{memId}, #{jobCode}, #{moodCode}, #{materialCode}
               )
    </insert>

    <insert id="insertPostDetail" parameterType="MyPost">
        insert into study_gh.POST_DETAIL
        (
            POST_DETAIL_ID, POST_ID, POST_IMG, CONTENTS, POST_TITLE
        )
        VALUES (
                   #{postDetailId}, #{communityId}, #{postImg}, #{communityContent}, #{communityTitle}
               )
    </insert>

    <insert id="insertPostTag" parameterType="MyPost">
        insert into study_gh.POST_TAG
        (
            post_tag_id, post_detail_id, contents
        )
        VALUES (
                   #{postTagId}, #{postDetailId}, #{tag}
               )
    </insert>

    <insert id="insertPostItem" parameterType="CommunityProducts">
        insert into study_gh.POST_ITEM
        (
            POST_ITEM_ID, POST_DETAIL_ID, PRODUCT_ID,  MAKET_CONTENTS, LOCATIONX, LOCATIONY
        )
        VALUES (
                   #{id}, #{postDetailId}, #{productId}, #{productDescription}, #{offsetX}, #{offsetY}
               )
    </insert>

    <select id="getPostDetail" resultType="PostProperties">
        select d.POST_ID AS communityId,
               d.post_title AS communityTitle,
               l.MEM_ID AS userId,
               m.NICKNAME AS userNick,
               m.PROFILE_IMG AS userProfileImg,
               post_img AS communityImage
        from study_gh.MEMBER m, study_gh.POST_LIST l, study_gh.POST_DETAIL d
        where l.POST_ID = #{communityId} and d.POST_ID = #{communityId}
          and m.MEM_ID = l.MEM_ID
        group by d.POST_ID
    </select>

    <select id="getPostLike" resultType="PostProperties">
        select lk.POST_ID AS communityId, count(lk.POST_ID) AS likeCount
        from study_gh.POST_LIKE lk
        group by lk.POST_ID
        order by COUNT(lk.POST_ID) desc limit 2
    </select>

    <select id="getPostCommentCount" resultType="int">
        select count(POST_ID) as commentCount
        from study_gh.POST_COMMENT c
        where POST_ID = #{communityId}
    </select>

    <select id="getPostFollow" resultType="String">
        select if(count(FOLLOWING)=0, 'false', 'true') as followingCheck
        from study_gh.FOLLOW
        where FOLLOWER = #{memId} and FOLLOWING = #{userId}
    </select>


    <select id="getPostComment" resultType="PostComment">
        select c.UPDATE_DT AS commentUpdateYmdt ,
               m.NICKNAME AS writeNickname,
               m.PROFILE_IMG AS writerProfileImgUrl,
               c.CONTENTS AS content
        from study_gh.MEMBER m, study_gh.POST_LIST l, study_gh.POST_COMMENT c
        where l.POST_ID = #{communityId} and c.POST_ID = #{communityId}
          and m.MEM_ID = l.MEM_ID
        group by c.POST_COMMENT_ID, c.UPDATE_DT
        order by c.UPDATE_DT desc
        LIMIT #{startRowNo}, #{endRowNo}
    </select>










</mapper>
